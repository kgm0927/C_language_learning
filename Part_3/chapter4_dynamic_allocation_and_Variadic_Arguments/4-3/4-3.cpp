#include <stdio.h>
#include <stdlib.h>
int main(void) {

	char* p1 = (char*)malloc(2);
	int* p2 = (int*)malloc(8);


	p1[0] = 'A';		// *(p1+0)='A';
	p2[0] = 'B';		// *(p1+1)='B';

	p2[0] = 10;			// *(p2+0)=10;
	p2[1] = 20;			// *(p2+1)=20;


	printf("주소 : %x %x %x %x \n", &p1[0], &p1[1], &p1[2], &p1[3]);
	printf("값 : %d %d %d %d \n", &p2[0], &p2[1], &p2[2], &p2[3]);

	free(p1);
	p1 = NULL;

	free(p2);
	p2 = NULL;

	return 0;

}
//
// 
// 5행에서 힙 영역에 2바이트 동적 메모리를 할당하고, 할당된 동적 메모리의 시작 주소를 (char*)으로 '형변환'하여
// 포인터 변수 p1에 저장한다.
// 
// 6행에서도 힙 영역에 8바이트 동적 메모리를 할당하고, 할당된 동적 메모리의 시작 주소를(int*)으로 형변환하여
// 포인터 변수 p2에 저장한다.
// 
// 
// 8행과 9행에서 char형 포인터 p1를 이용하여 배열 공간 p1[0]에 문자 A를, p[1]에 문자 B를 저장한다.
// 11행, 12행 포인터 p2를 이용하여 배열 공간 p2[0]에 10을, p2[1]에 20를 저장한다.
// 
// 
// 17, 18행에서 char 포인터 변수 p1를 이용하여 할당된 동적 메모리를 해제하고,
// p1에 NULL을 가리키게 한다. 마찬가지로 20행, 21행에 p2를 이용하여
// 할당된 동적 메모리를 해제하고 p2에 NULL을 가리키게 한다.
//