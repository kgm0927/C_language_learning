#include <stdio.h>

int a = 10;

int main(void) {
	int num1 = 10, num2 = 20;	// 지역 변수 num1, num2 선언
	static int s = 20;				// 정적 변수 s 선언

		printf("데이터 출력 : %d %d %d %d \n", a, num1, num2, s);
		printf("코드 영역 : %x %x \n", main, printf);
		printf("스택 영역 : %x %x \n", &num1, &num2);
		printf("데이터 영역: %x %x \n", &a, &s);


}


// 
// 
// 
// chapter4 동적 메모리 할당과 가변 인자
// 
// 프로그램에서 사용되는 메모리에는 정적 메모리 동적 메모리가 있다.
// 정적 메모리는 프로그램 실행 시간 중에 메모리의 크기를 변경하는 것이 불가능하다.
// 이러한 문제를 해결하기 위해 힙 영역같은 '동적 메모리'가 요구된다.
// 
// 
// 4.1 동적 메모리 할당
// 
//			프로세스의 메모리 공간
// 
// 
// 실행 중인 프로그램(C 프로그램)을 프로세스라고 부르는데, 프로세스의 메모리 공간은
// 다음 그림과 같이 코드(Code) 영역, 스택(Stack) 영역, 데이터(Data) 영역, 힙(Heap) 영역
// 으로 나뉜다.
// 
// 
//		코드 영역: 프로그램 실행 코드 또는 함수들이 저장되는 영역이다.
// 
//		스택 영역: 함수 호출에 의한 맴개변수와 지역 변수 그리고 함수, 반복문, 조건문 등의 중괄호(블록) 내부에
//		정의된 변수들이 저장되는 영역으로 잠깐 사용되고 메모리에서 소멸시킬 데이터가 저장되는 영역이다.
//	
//		데이터 영역: 전역 변수와 정적 변수들이 저장되는 영역으로 프로그램이 종료될 때까지
//					유지되어야 하는 데이터가 저장되는 영역이다.
// 
//		힙 영역: 프로그램이 실행되는 동안에 프로그래머가 동적으로 메모리를 할당할 수 있는 영역이다.
// 
// 
// 
// 
// 
// 
// 3행에서 전역 변수 a를 선언한다. a는 데이터 영역에 저장된다.
// 
// 7행에서 지역 변수 num1, num2를 선언한다. 이 둘은 '스택 영역'에 저장된다.
// 
// 8행에서 정적 변수s를 선언한다. s는 데이터 영역에 저장된다.
// 
// 11행에서 함수의 이름을 출력하고 있다. 함수의 이름은 '코드 영역'에 나타낸다.
// 
// 12행에서 지역 변수의 주소를 출력한다. 지역 변수는 '스택 영역'에서 나타낸다.
// 
// 13행에서 전역 변수, 정적 변수의 주소를 출력한다. 이들은 '데이터 영역'에서 나타낸다.
// 
// 
// 
// 이 중에서 우리가 사용하지 않은 영역은 '힙 영역'이다. 그렇다면 힙 영역은 어떤 영역인가>?
// 프로그래머가 동적으로 메모리를 할당할 수 있는 영역이다. 다음 절에서 알아보도록 한다.
//
