#include <stdio.h>
int main() {
	int a = 0, b = 0, c = 0;
	int* ip = NULL;


	ip = &a;// 주소 저장
	*ip = 10;	// 값 변환
	printf("%d %d %d %d \n", a, b, c, *ip);


	ip = &b;
	*ip = 20;
	printf("%d %d %d %d \n", a, b, c, *ip);

	ip = &c;
	*ip = 30;
	printf("%d %d %d %d \n", a, b, c, *ip);


	return 0;
}
//
// 
// 5행에서 int*형 포인터 변수 ip를 선언한다. 7행에서는 포인터 변수 ip에 &a(변수 a의 주소)를
// 저장한다.
// 
// 8행에서는 *ip=10을 수행하는데 ip는 &a를 저장하고 있으므로 *ip의 의미는 *&a와 같다.
// 따라서 변수 a에 간접 접근해서 10을 저장한다. 
// 
// 계속해서 11행과 12행에서는 포인터 변수 ip에 &b(변수 b의 주소)를 저장해서 *ip=20을 수행한다.
// *ip의 의미는 *&b와 같다. 따라서 변수 b에 간접 접근해서 20을 저장한다.
// 
// 마지막으로 15행과 16행에서는 포인터 변수 ip에 &c(변수 c의 주소)를 저장해서 *ip=30을 수행한다.
// *ip의 의미는 *&c와 같다. 따라서 변수 c에 간접 접근해서 30을 접근한다.
// 
// 
// 포인터 변수에 어떤 변수의 주소를 저장하느냐에 따라 간접 접근하는 대상이 바뀐다.
//