#include <stdio.h>

void func(int(*p)[4], int num1, int num2);

int main(void) {
	int array[2][4] = { 10,20,30,40,50,60,70,80 };
	func(array, sizeof(array) / 16, sizeof(array) / 8);
	return 0;

}




void func(int(*p)[4], int num1, int num2) {
	int i, j;
	for ( i = 0; i < num1; i++)
	{
		for ( j = 0; j < num2; j++)
		{
			printf("%d \n", p[i][j]);
		}
		printf("\a");
	}
}
//
// 
// 3행에서 배열 포인터 변수 p는 길이가 4열인 2차원 배열의 주소를 저장하는 포인터 변수이고,
// 변수 num1는 행의 길이, 변수 num2는 열의 길이를 저장하는 int형 변수이다.
// 
// 7행에서 2행 4열의 2차원 배열 array를 생성하고 데이터를 저장한다.
// 
// 8행에서 배열 이름 array, 정수 2, 정수 4를 가지고 12행의 func() 함수를 호출한다.
// 
// 12행에서 배열 포인터 변수 p에 2차원 배열의 시작 주소를 저장하고, 변수 num1에 2를 저장하고, 변수 num2에 4를 저장한다.
// 
// 15행부터 22행까지에서 배열 포인터 변수 p와 중첩 반복문을 통해 p[i][j]를 출력한다.
//














//
// 
//		배열 포인터를 이용한 주소에 의한 호출
// 
// 지금부터는 배열 포인터를 이용한 호출에 대해서 공부한다. 위의 예제는
// 2차원 배열의 주소를 저장하는 배열 포인터 변수 p를 이용하는 코드이다.
// 
// 3행에서 배열 포인터 변수p는 길이가 4열인 2차원 배열의 주소를 저장하는 포인터 변수이고,
// 변수 num1은 행의 길이, 변수 num2는 열의 길이를 저장하는 int형 변수이다.
// 
// 7행에서 2행 4열의 2차원 배열 array를 생성하고 데이터를 저장한다.
// 
// 8행에서 배열 이름 array, 정수 2, 정수 4를 가지고 12행의 func() 함수를 호출한다.
// 
// 12행에서 배열 포인터 변수 p에 2차원 배열의 시작 주소를 저장하고, 변수 num1에 2를 저장하고,
// 4를 저장한다.
// 
// 15행부터 22행까지에서 배열 포인터 변수 p와 중첩 반복문을 통해 p[i][j]를 출력한다.
//