
// 포인터 변수에 다른 메모리 공간의 주소를 저장하지 못하게 한다.

#include <stdio.h>
int main(void) {
	char a = 'A';
	char b = 'B';

  char* const p = &a;

  *p = 'C';

  printf("%c \n", *p);
  printf("%c \n", a);

  // p = &b; // 에러

  return 0;
}

//
//
// 
// 포인터 변수의 상수화
// 
// 포인터 변수는 주소를 저장하는 변수로 여러 가지 주소를 저장할 수 있다.
// 그리고 이들 주소를 통하여 메모리 공간으로 간접적으로 접근해서 값을 변경할 수 있다.
// 그런데 const 키워드를 사용하여 포인터 변수를 상수화 할 수 있다. 이렇게 상수화 하는
// 것은 세 가지 의미가 있다.
// 
// 
// 1: 포인터 변수에 다른 메모리 공간의 주소를 저장하지 못하게 한다.
// - 오로지 하나의 주소만 저장하게 한다
// 
// 2: 포인터 변수를 통해 메모리 공간의 값을 변경하지 못하게 한다.
// -직접적인 접근을 통해서만 값을 변경하게 된다.
// 
// 3: 1과 2 둘 다 못하게 한다.
// 
// 
// 
// 
// 위의 코드는 10행에서 const 키워드로 상수화한 영역은 p=&a이다. 따라서 포인터 변수는 p는 오로지
// &a만을 저장해야 한다. 포인터 변수 p에 다른 주소를 저장하는 것은 불가능하다.
// 
// 16행에서 포인터 변수 p에 다른 주소 &b(변수 b의 주소)를 저장하는 행위를 하고 있다. 따라서 에러가
// 발생한다.
// 
//