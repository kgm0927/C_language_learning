#include <stdio.h>
int main(void) {

	int array[3] = { 10,20,30 };
	int* p = NULL;

	p = array;		//	p=&array[0];
	printf("%d %d %d \n", p[0], p[1], p[2]);
	printf("%d  %d %d \n", *p, *(p + 1), *(p + 2));

	printf("--------------------------------\n");

	p = p + 1;		// p=&array[1];
	printf("%d %d %d \n", p[-1], p[0], p[1]);
	printf("%d %d %d \n", *(p - 1), *(p), *(p + 1));
	printf("--------------------------------\n");

	p = p + 1;		// p=&array[2];
	printf("%d %d %d \n", p[-2], p[-1], p[0]);
	printf("%d %d %d \n", *(p - 2), *(p - 1), *(p));
	printf("-------------------------------\n");

	return 0;
}// *p==(*p+0)

//
// 
// 다음 예제는 포인터 변수 p에 저장되는 배열의 주소가 다양하게 표현되는 것을 알 수 있다.
// 
// 7행부터 9행까지의 포인터 변수 p에 array를 저장한다. p에 저장된 값은 배열의 시작주소이다.
// 12행부터 14행까지의 포인터 변수 p에 p+1를 저장한다. 먼저 p+1부터 보자면, 7행에서 p=array가
// 수행되었는데, p+1에서 p는 array가 되고 +1를 하게 되면 array+1과 같은 의미가 된다.
// 
// 17행에서 포인터 변수 p에 p+1을 저장한다. 먼저 p+1부터 본다. 12행에서 p=array+1이 수행됬다.
// 그래서 p+1에서 p는 array+1이 되고, +1을 하게 되면 array+2와 같은 의미가 된다.결론적으로
// p=p+1은 p=array+2와 같다.
// 
//