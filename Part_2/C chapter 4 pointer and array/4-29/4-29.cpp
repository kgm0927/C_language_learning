#include <stdio.h>
int main(void) {
	
	const char* p = "ABCD";	// 문자열 상수 ABCD의 시작주소를 p에 저장 (현재 char* p에는 반드시 const가 수식되어야 한다. 그렇지 않으면 오류가 뜬다.)
	printf("%s \n", p);
	printf("%s \n", p + 1);
	printf("%s \n", p + 2);
	printf("%s \n", p + 3);

	return 0;
}

//
// 포인터와 문자열
// 
// 문자열의 시작 주소를 알면 모둔 문자들에 접근할 수 있다고 했다. 그리고 지금까지
// printf() 함수에 문자열의 시작 주소를 입력하면 서식 문자 %s를 이용해서 문자열을
// 일괄적으로 출력할 수 있다.
// 
// 문자열의 시작 주소를 입력받아서 종료 문자(\0)를 만날때까지 문자열을 출력하는 막강한
// 서식문자 %s의 기능이 있어서 문자열을 잘 이해할 수 있다.
// 
// 4행은 포인터 변수 p에 문자열 ABCD를 저장하는 의미가 아니다. 포인터 변수란 주소를 저장하는 변수이다.
// 따라서 'char* p="ABCD"'는 포인터 변수 p에 문자열 상수 ABCD의 시작 주소를 저장하라는 의미이다.
// 
// 6행부터 10행까지에서 문자열의 시작 주소를 입력받아서 서식 문자로 %s로 문자열을 출력한다.
//
// 책 421.page 참조
// 
// 예전에 배웠던 문자열을 배열에 저장한 형식과는 메모리 구조가 약간 다르다.
//