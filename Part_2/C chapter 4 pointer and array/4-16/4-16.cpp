#include <stdio.h>
int main(void) {
	
	int array[2][3] = { 10,20,30,40,50,60 };
	int(*p)[3] = NULL;
	
	p = array;	// p=&array[0][0]; // p=array[0]; 포인터 변수에 배열의 시작 주소를 설정

	printf("%d %d %d \n", p[0][0], p[0][1], p[0][2]);
	printf("%d %d %d \n", p[1][0], p[1][1], p[1][2]);

	return 0;


}

//
// 배열 포인터 변수를 통한 2차원 배열의 접근
// 
// 배열 포인터 변수는 배열을 가리키는 포인터 변수라는 의미를 갖는다. 앞 예제의
// 문제를 해결하기 전에 먼재 배열 포인터 변수를 선언하는 방법부터 살펴본다.
// 
//		int			(*p)		[3];
//		//type		//배열 포인터	// 열 길이
//					변수 이름		
// 
// 자료형: 배열 포인터 변수가 저장하는 배열의 자료형
// 배열 포인터 변수 이름: * 연산자와 배열 포인터 변수 이름을 함께 괄호로 묶음
// 열의 길이: 배열 포인터 변수가 가리키는 배열의 열의 길이를 지정
// 
// 
// 5행에서 3열짜리 2차원의 배열의 주소를 저장할 수 있는 배열 포인터 변수 p를 선언한다. 
// 
// 7행에서는 배열 포인터 변수 p에 array(2차원 배열의 시작 주소)를 저장한다. 9행과 10행에서
// 배열 포인터 변수 p를 통해 2차원 배열에 저장된 값들에 접근한다.
// 
//