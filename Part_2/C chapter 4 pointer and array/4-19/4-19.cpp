#include <stdio.h>
int main(void) {

	int a = 10, b = 20, c = 30;
	int* ap = NULL;
	int* bp = NULL;
	int* cp = NULL;

	ap = &a;
	bp = &b;
	cp = &c;

	printf("%d %d %d \n", a, b, c);
	printf("%d %d %d \n", *ap, *bp, *cp);

	printf("%x %x %x \n", &a, &b, &c);
	printf("%x %x %x \n", ap, bp, cp);
	printf("%x %x %x \n", &ap, &bp, &cp);

	return 0;
}

//
// 포인터 배열의 선언과 필요성
// 
// 지금부터는 포인터 배열을 공부한다. 포인터 배열의 의미는 주소를 저장하는 배열을 말한다.
// 
// 
// 
//			int *			pointer		[3];
//			//자료형		// 포인터	// 배열 길이
//								배열
//								이름
// 
// 
// 자료형: 포인터 배열의 자료형을 지정, 자료형 다음에 * 연산자를 붙임
// 포인터 배열 이름: 주소를 저장할 배열의 이름을 지정
// 배열 길이: 주소 저장할 배열의 전체 길이를 지정
// 
// 
// 위의 예제는 포인터 변수 세 개 선언해서 일반 변수의 주소를 저장하고 있다. 만약 저장해야 할
// 주소의 개수가 많아지만 당연히 포인터 변수를 많이 만들게 된다. 이렇게 포인터의 변수의 개수가 많아지는
// 단점을 보완하는 방법을 포인터 배열이라고 한다.
//

