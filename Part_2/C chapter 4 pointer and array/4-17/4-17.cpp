#include <stdio.h>
int main(void) 
{
	int array[2][3] = { 10,20,30,40,50,60 };
	int(*p)[3] = NULL;	// 배열 포인터 변수 p 선언

	p = array;			// p=&array[0]; 포인터 변수에 배열의 시작 주소를 저장
	printf("%x %x %x \n", &array[0][0], &array[0][1], &array[0][2]);
	printf("%x %x %x \n", &array[1][0], &array[1][1], &array[1][2]);

	printf("------------------------ \n");
	printf("%x %x %x \n", &p[0][0], &p[0][1], &p[0][2]);
	printf("%x %x %x \n", &p[1][0], &p[1][1], &p[1][2]);
	// 여기까지는 주소 출력
	printf("-------------------------- \n");
	printf("%d %d %d \n", *&array[0][0], *&array[0][1], *&array[0][2]);
	printf("%d %d %d \n", *&array[1][0], *&array[1][1], *&array[1][2]); 


	printf("---------------------------\n");
	printf("%d %d %d \n", *&p[0][0], *&p[0][1], *&p[0][2]);
	printf("%d %d %d \n", *&p[0][0], *&p[1][1], *&p[1][2]);
	// 여기까지 값 출력


	printf("------------------------- \n");
	printf("%d %d %d \n", array[0][0], array[0][1], array[0][2]);
	printf("%d %d %d \n", array[1][0], array[1][1], array[1][2]); 


	printf("------------------------- \n");
	printf("%d %d %d \n", p[0][0], p[0][1], p[0][2]);
	printf("%d %d %d \n", p[1][0], p[1][1], p[1][2]);
	// 여기까지 값 출력 *& 서로 상쇄

	return 0;
}

//
// 5행에서 3열짜리 2차원 배열의 주소를 저장할 수 있는 배열 포인터 변수 p를 선언한다. 7행에서 배열 포인터 변수 p가
// array(2차원 배열의 시작 주소.)를 저장한다. 
// 
// 8행, 9행에서 2차원 배열의 요소들의 주소를 출력한다.
// 
// 12행, 13행에서 배열 포인터 변수 p를 통해 배열의 요소들의 주소를 출력한다.
// 
// 16행과 17행에서 * 연산자를 통하여 2차원 배열에 저장된 값들을 출력한다.
// 
// 20행, 21행에서 배열 포인터 변수 p를 통하여 배열의 요소들의 주소 앞에 * 연산자를 사용하여 2차원 배열에
// 저장된 값을 출력한다.
// 
// 24, 25행에서는 *&는 서로 상쇄되는 성질이 있어서 16행과 17행의 결과와 동일하게 출력이 된다.
// 
// 28, 29행에서는 *&는 서로 상쇄되는 성질이 있어서 20행과 21행의 결과와 동일하게 출력된다.
//