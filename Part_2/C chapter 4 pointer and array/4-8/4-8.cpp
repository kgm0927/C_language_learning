#include <stdio.h>
int main(void) 
{
	int array[3] = { 10,20,30 };
	int* p = NULL;

	p = array; // p=&array[0];
	printf("%d %d %d \n",p[0],p[1],p[2]);
	printf("%d %d %d \n",*p,*(p+1),*(p+2));

	p = array + 1; // p=&array[1];
	printf("%d %d %d \n",p[-1],p[0],p[1]);
	printf("%d %d %d \n",*(p-1),*p,*(p+1),*(p+2));

	p = array + 2;	// p=&array[2];
	printf("%d %d %d \n",p[-2],p[-1],p[0]);
	printf("%d %d %d \n",*(p-2),*(p-1),*(p));

	return 0;
}//*p=*(p+0)

//
// 주소의 가감산을 이용한 배열의 접근
// 
// 7행에서 9행까지에서 포인터 변수 p에 배열 이름 array를 저장한다. p에 저장된 값은
// 배열의 시작 주소이기 때문에 * 연산자를 이용해서 값을 참조하면 *p가 된다. *p p[0]
// 과 같다.
// 
// 11행부터 13행까지의 포인터 변수 p에 array+1을 저장한다. p에 저장된 값은 배열의 1번 요소의
// 주소이기 때문에 *p와 p[0]는 모두 20이 출력되고, p[-1]은 10, p[1]는 30이 출력된다.
// 
// 15행부터 17행까지의 포인터 변수 p에 array+2를 저장한다. p에 저장된 값은 배열의 2번 요소의
// 주소이기 때문에 *p, p[0]는 모두 30이 출력되고, p[-1]은 20, p[-2]는 10이 출력된다.
//

