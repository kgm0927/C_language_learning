#include <stdio.h>
int main(void) {
	int array[2][3] = { 10,20,30,40,50,60 };
	int(*p)[3] = NULL; // 배열 포인터 변수 p 선언

	p = array;	// p=&array[0][0]; // p=array[0]; 포인터 변수에 배열의 시작 주소를 저장

	printf("---------------------------#1-------------------------- \n");
	printf("%x %x %x \n", &p[0][0], &p[0][1], &p[0][2]);
	printf("%x %x %x \n", &p[1][0], &p[1][1], &p[1][2]);	// 배열 요소의 주소 출력

	printf("--------------------------#2------------------------------\n");
	printf("%x %x \n", p, p + 1);
	printf("%x %x \n", p[0], p[1]);
	printf("%x %x \n", *(p + 0), *(p + 1)); // 각 행의 주소 출력


	printf("-------------------------#3-------------------------------\n");
	printf("%d %d %d \n", *(p[0] + 0), *(p[0] + 1), *(p[0] + 2));
	printf("%d %d %d \n", *(p[1] + 0), *(p[1] + 1), *(p[1] + 2));


	printf("-------------------------#4------------------------------\n");
	printf("%d %d %d \n", *(*(p + 0) + 0), *(*(p + 0) + 1), *(*(p + 0) + 2));
	printf("%d %d %d \n", *(*(p + 1) + 0), *(*(p + 1) + 1), *(*(p + 1) + 1));// 값 출력


	return 0;
}

//
//
// 5행에서 3열짜리 2차원 배열의 주소를 저장할 수 있는 배열 포인터 변수 p를 선언한다.
// 
// 10, 11행에서 배열 포인터 변수 p와 & 연산자를 사용하여 2차원 배열의 요소들의 주소를 출력한다.
// 2차원 배열 array는 int형이므로 각 열은 4바이트만큼 차이가 난다.
// 
// 19행과 20행에서 배열 포인터 변수 p를 사용하여 2차원 배열에 저장된 값들을 출력한다.
// p[0]은 0번 행의 주소를 나타내며 p[0]+0은 0행 0열의 주소, p[0]+1은 0행 1열의 주소, p[1]+0
// 은 1행 0열의 주소를 나타낸다. * 연산자와 괄호 연산자로 주소에 저장된 값을 출력한다.
// 
// 23행과 24행에서 p[0]==*(p+0), p[1]==*(p+1)이기 때문에 19행과 20행의 p[0]을 *(p+0)으로
// 치환하고, p[1]을 *(p+1)으로 치환하면 같은 결과를 출력한다. 
//